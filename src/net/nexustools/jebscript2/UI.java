/*
 * Copyright (C) 2016 NexusTools
 *
 * Retropiler is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, version 3 or any later version.
 * 
 * Retropiler is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 * 
 * You should have received a copy of the GNU Lesser General Public License
 * along with Retropiler.  If not, see <http://www.gnu.org/licenses/>.
 * 
 */
package net.nexustools.jebscript2;

import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import org.fife.ui.rsyntaxtextarea.RSyntaxTextArea;
import org.fife.ui.rsyntaxtextarea.SyntaxConstants;
import org.fife.ui.rsyntaxtextarea.Theme;
import org.fife.ui.rtextarea.RTextScrollPane;

/**
 *
 * @author aero
 */
public class UI extends javax.swing.JFrame {

    
    RSyntaxTextArea textarea;
    /**
     * Creates new form UI
     */
    public UI() {
        textarea = new RSyntaxTextArea(20, 60);
        textarea.setSyntaxEditingStyle(SyntaxConstants.SYNTAX_STYLE_JAVASCRIPT);
        textarea.setCodeFoldingEnabled(true);
        initComponents();
        InputStream in = getClass().getResourceAsStream("/dark.xml");
        try {
           Theme theme = Theme.load(in);
           theme.apply(textarea);
        } catch (IOException ioe) {
           ioe.printStackTrace();
        }
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton5 = new javax.swing.JButton();
        jMenuItem7 = new javax.swing.JMenuItem();
        jScrollPane1 = new RTextScrollPane(textarea);
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItem13 = new javax.swing.JMenuItem();
        mnukOS = new javax.swing.JMenu();
        mnuConnect = new javax.swing.JMenuItem();
        mnuDisconnect = new javax.swing.JMenuItem();
        mnuExecute = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenuItem10 = new javax.swing.JMenuItem();
        jMenuItem12 = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem8 = new javax.swing.JMenuItem();
        mnuStatus = new javax.swing.JMenu();

        jButton5.setText("jButton5");

        jMenuItem7.setText("jMenuItem7");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jMenu1.setText("File");

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setText("New");
        jMenu1.add(jMenuItem2);

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem3.setText("Open...");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuItem4.setText("Save as...");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuItem5.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem5.setText("Save");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem5);
        jMenu1.add(jSeparator1);

        jMenuItem13.setText("Quit");
        jMenuItem13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem13ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem13);

        jMenuBar1.add(jMenu1);

        mnukOS.setText("kOS");

        mnuConnect.setText("Connect...");
        mnuConnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuConnectActionPerformed(evt);
            }
        });
        mnukOS.add(mnuConnect);

        mnuDisconnect.setText("Disconnect");
        mnuDisconnect.setEnabled(false);
        mnuDisconnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuDisconnectActionPerformed(evt);
            }
        });
        mnukOS.add(mnuDisconnect);

        mnuExecute.setText("Execute");
        mnuExecute.setEnabled(false);
        mnuExecute.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuExecuteActionPerformed(evt);
            }
        });
        mnukOS.add(mnuExecute);

        jMenuBar1.add(mnukOS);

        jMenu2.setText("Edit");

        jMenuItem9.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem9.setText("Find (NYI)");
        jMenu2.add(jMenuItem9);

        jMenuItem10.setText("Statistics");
        jMenu2.add(jMenuItem10);

        jMenuItem12.setText("Preview Output");
        jMenuItem12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem12ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem12);

        jMenuItem1.setText("Preferences");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem1);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Help");

        jMenuItem8.setText("About");
        jMenu3.add(jMenuItem8);

        jMenuBar1.add(jMenu3);

        mnuStatus.setText("Status: disconnected.");
        mnuStatus.setEnabled(false);
        jMenuBar1.add(mnuStatus);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 620, Short.MAX_VALUE)
                .addGap(2, 2, 2))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 425, Short.MAX_VALUE)
                .addGap(2, 2, 2))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mnuConnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuConnectActionPerformed
        KOSConnect p = new KOSConnect(this);
        p.setLocationRelativeTo(this);
        p.setVisible(true);
    }//GEN-LAST:event_mnuConnectActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed

    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        JFileChooser c = new JFileChooser();
        c.showOpenDialog(this);
        workFile = c.getSelectedFile();
        load();
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    public void pickSaveFile(){
        JFileChooser c = new JFileChooser();
        c.showSaveDialog(this);
        workFile = c.getSelectedFile();
    }
    
    public void save(){
        
    }
    
    public void load(){
        
    }
    
    File workFile = null;
    
    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        pickSaveFile();
        save();
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        // TODO add your handling code here:
        if(workFile == null)
            pickSaveFile();
        save();
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem12ActionPerformed
        new Task(this, "Compiling Script...") {
            String compiled;
            String source = textarea.getText();
            @Override
            public void runInThread() throws IOException {
                compiled = Parser.compile(source);
            }
            @Override
            public void runInUI(Throwable error) {
                if(error == null)
                    new Preview(compiled, UI.this).setVisible(true);
                else
                    JOptionPane.showMessageDialog(UI.this, error.toString(), "Error Occured", JOptionPane.ERROR_MESSAGE);
            }
        }.run();
    }//GEN-LAST:event_jMenuItem12ActionPerformed

    private void mnuExecuteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuExecuteActionPerformed
        new Task(this, "Compiling JebScript...") {
            String source = textarea.getText();
            @Override
            public void runInThread() throws Throwable {
                String compiled = Parser.compile(source);
                System.out.println("Compiled script: " + compiled);
                updateText("Uploading JebScript...");
                KOSInterface.exec(compiled);
            }
            @Override
            public void runInUI(Throwable error) {
                if(error == null)
                    JOptionPane.showMessageDialog(UI.this, "Hurrah!", "Upload Complete", JOptionPane.INFORMATION_MESSAGE);
                else
                    JOptionPane.showMessageDialog(UI.this, error.toString(), "Error Occured", JOptionPane.ERROR_MESSAGE);
            }
        }.run();
    }//GEN-LAST:event_mnuExecuteActionPerformed

    private void mnuDisconnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuDisconnectActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mnuDisconnectActionPerformed

    private void jMenuItem13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem13ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenuItem13ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton5;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem12;
    private javax.swing.JMenuItem jMenuItem13;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JMenuItem mnuConnect;
    private javax.swing.JMenuItem mnuDisconnect;
    private javax.swing.JMenuItem mnuExecute;
    private javax.swing.JMenu mnuStatus;
    private javax.swing.JMenu mnukOS;
    // End of variables declaration//GEN-END:variables
    
    boolean connected = false;
    
    void connected() {
        mnuStatus.setText("Status: Connected");
        mnuConnect.setEnabled(false);
        mnuDisconnect.setEnabled(true);
        mnuExecute.setEnabled(true);
        connected = true;
    }
    
    void disconnect() {
        // TODO: Implement
    }
    
}
